/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as publicRouteRouteImport } from './routes/(public)/route'
import { Route as authenticatedRouteRouteImport } from './routes/(authenticated)/route'
import { Route as publicIndexRouteImport } from './routes/(public)/index'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authenticatedOrgNewRouteImport } from './routes/(authenticated)/org/new'
import { Route as authAcceptInvitationIdRouteImport } from './routes/(auth)/accept-invitation.$id'
import { Route as authenticatedOrgSlugRouteRouteImport } from './routes/(authenticated)/org/$slug/route'
import { Route as authenticatedOrgSlugIndexRouteImport } from './routes/(authenticated)/org/$slug/index'
import { Route as authenticatedOrgSlugownerRouteRouteImport } from './routes/(authenticated)/org/$slug/(owner)/route'
import { Route as authenticatedOrgSlugmemberRouteRouteImport } from './routes/(authenticated)/org/$slug/(member)/route'
import { Route as authenticatedOrgSlugadminDashboardRouteRouteImport } from './routes/(authenticated)/org/$slug/(admin)/dashboard/route'
import { Route as authenticatedOrgSlugownerManageIndexRouteImport } from './routes/(authenticated)/org/$slug/(owner)/manage/index'
import { Route as authenticatedOrgSlugmemberTeamIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/index'
import { Route as authenticatedOrgSlugadminDashboardIndexRouteImport } from './routes/(authenticated)/org/$slug/(admin)/dashboard/index'
import { Route as authenticatedOrgSlugownerManageInvitationsRouteImport } from './routes/(authenticated)/org/$slug/(owner)/manage/invitations'
import { Route as authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteImport } from './routes/(authenticated)/org/$slug/(member)/(base-modules)/communication/route'
import { Route as authenticatedOrgSlugownerManageSettingsIndexRouteImport } from './routes/(authenticated)/org/$slug/(owner)/manage/settings/index'
import { Route as authenticatedOrgSlugmemberTeamIdIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$id/index'
import { Route as authenticatedOrgSlugmemberbaseModulesCommunicationIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/(base-modules)/communication/index'
import { Route as authenticatedOrgSlugmemberbaseModulesAttendanceIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/(base-modules)/attendance/index'
import { Route as authenticatedOrgSlugadminDashboardTeamsIndexRouteImport } from './routes/(authenticated)/org/$slug/(admin)/dashboard/teams/index'
import { Route as authenticatedOrgSlugadminDashboardMembersIndexRouteImport } from './routes/(authenticated)/org/$slug/(admin)/dashboard/members/index'
import { Route as authenticatedOrgSlugadminDashboardTeamsNewRouteImport } from './routes/(authenticated)/org/$slug/(admin)/dashboard/teams/new'
import { Route as authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteImport } from './routes/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels/route'
import { Route as authenticatedOrgSlugmemberTeamIdModuleIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$id/module/index'
import { Route as authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRouteImport } from './routes/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels/$id'
import { Route as authenticatedOrgSlugmemberTeamIdModuleSlugIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$id/module/$slug/index'
import { Route as authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/index'
import { Route as authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/$slug/index'

const publicRouteRoute = publicRouteRouteImport.update({
  id: '/(public)',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedRouteRoute = authenticatedRouteRouteImport.update({
  id: '/(authenticated)',
  getParentRoute: () => rootRouteImport,
} as any)
const publicIndexRoute = publicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicRouteRoute,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedOrgNewRoute = authenticatedOrgNewRouteImport.update({
  id: '/org/new',
  path: '/org/new',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authAcceptInvitationIdRoute = authAcceptInvitationIdRouteImport.update({
  id: '/(auth)/accept-invitation/$id',
  path: '/accept-invitation/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedOrgSlugRouteRoute =
  authenticatedOrgSlugRouteRouteImport.update({
    id: '/org/$slug',
    path: '/org/$slug',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugIndexRoute =
  authenticatedOrgSlugIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => authenticatedOrgSlugRouteRoute,
  } as any)
const authenticatedOrgSlugownerRouteRoute =
  authenticatedOrgSlugownerRouteRouteImport.update({
    id: '/(owner)',
    getParentRoute: () => authenticatedOrgSlugRouteRoute,
  } as any)
const authenticatedOrgSlugmemberRouteRoute =
  authenticatedOrgSlugmemberRouteRouteImport.update({
    id: '/(member)',
    getParentRoute: () => authenticatedOrgSlugRouteRoute,
  } as any)
const authenticatedOrgSlugadminDashboardRouteRoute =
  authenticatedOrgSlugadminDashboardRouteRouteImport.update({
    id: '/(admin)/dashboard',
    path: '/dashboard',
    getParentRoute: () => authenticatedOrgSlugRouteRoute,
  } as any)
const authenticatedOrgSlugownerManageIndexRoute =
  authenticatedOrgSlugownerManageIndexRouteImport.update({
    id: '/manage/',
    path: '/manage/',
    getParentRoute: () => authenticatedOrgSlugownerRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamIndexRoute =
  authenticatedOrgSlugmemberTeamIndexRouteImport.update({
    id: '/team/',
    path: '/team/',
    getParentRoute: () => authenticatedOrgSlugmemberRouteRoute,
  } as any)
const authenticatedOrgSlugadminDashboardIndexRoute =
  authenticatedOrgSlugadminDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => authenticatedOrgSlugadminDashboardRouteRoute,
  } as any)
const authenticatedOrgSlugownerManageInvitationsRoute =
  authenticatedOrgSlugownerManageInvitationsRouteImport.update({
    id: '/manage/invitations',
    path: '/manage/invitations',
    getParentRoute: () => authenticatedOrgSlugownerRouteRoute,
  } as any)
const authenticatedOrgSlugmemberbaseModulesCommunicationRouteRoute =
  authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteImport.update({
    id: '/(base-modules)/communication',
    path: '/communication',
    getParentRoute: () => authenticatedOrgSlugmemberRouteRoute,
  } as any)
const authenticatedOrgSlugownerManageSettingsIndexRoute =
  authenticatedOrgSlugownerManageSettingsIndexRouteImport.update({
    id: '/manage/settings/',
    path: '/manage/settings/',
    getParentRoute: () => authenticatedOrgSlugownerRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamIdIndexRoute =
  authenticatedOrgSlugmemberTeamIdIndexRouteImport.update({
    id: '/team/$id/',
    path: '/team/$id/',
    getParentRoute: () => authenticatedOrgSlugmemberRouteRoute,
  } as any)
const authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute =
  authenticatedOrgSlugmemberbaseModulesCommunicationIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      authenticatedOrgSlugmemberbaseModulesCommunicationRouteRoute,
  } as any)
const authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute =
  authenticatedOrgSlugmemberbaseModulesAttendanceIndexRouteImport.update({
    id: '/(base-modules)/attendance/',
    path: '/attendance/',
    getParentRoute: () => authenticatedOrgSlugmemberRouteRoute,
  } as any)
const authenticatedOrgSlugadminDashboardTeamsIndexRoute =
  authenticatedOrgSlugadminDashboardTeamsIndexRouteImport.update({
    id: '/teams/',
    path: '/teams/',
    getParentRoute: () => authenticatedOrgSlugadminDashboardRouteRoute,
  } as any)
const authenticatedOrgSlugadminDashboardMembersIndexRoute =
  authenticatedOrgSlugadminDashboardMembersIndexRouteImport.update({
    id: '/members/',
    path: '/members/',
    getParentRoute: () => authenticatedOrgSlugadminDashboardRouteRoute,
  } as any)
const authenticatedOrgSlugadminDashboardTeamsNewRoute =
  authenticatedOrgSlugadminDashboardTeamsNewRouteImport.update({
    id: '/teams/new',
    path: '/teams/new',
    getParentRoute: () => authenticatedOrgSlugadminDashboardRouteRoute,
  } as any)
const authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRoute =
  authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteImport.update(
    {
      id: '/channels',
      path: '/channels',
      getParentRoute: () =>
        authenticatedOrgSlugmemberbaseModulesCommunicationRouteRoute,
    } as any,
  )
const authenticatedOrgSlugmemberTeamIdModuleIndexRoute =
  authenticatedOrgSlugmemberTeamIdModuleIndexRouteImport.update({
    id: '/team/$id/module/',
    path: '/team/$id/module/',
    getParentRoute: () => authenticatedOrgSlugmemberRouteRoute,
  } as any)
const authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRoute =
  authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRouteImport.update(
    {
      id: '/$id',
      path: '/$id',
      getParentRoute: () =>
        authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRoute,
    } as any,
  )
const authenticatedOrgSlugmemberTeamIdModuleSlugIndexRoute =
  authenticatedOrgSlugmemberTeamIdModuleSlugIndexRouteImport.update({
    id: '/team/$id/module/$slug/',
    path: '/team/$id/module/$slug/',
    getParentRoute: () => authenticatedOrgSlugmemberRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRoute =
  authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRouteImport.update({
    id: '/team/$id/module/$slug/feature/',
    path: '/team/$id/module/$slug/feature/',
    getParentRoute: () => authenticatedOrgSlugmemberRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRoute =
  authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRouteImport.update({
    id: '/team/$id/module/$slug/feature/$slug/',
    path: '/team/$id/module/$slug/feature/$slug/',
    getParentRoute: () => authenticatedOrgSlugmemberRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof publicIndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/org/$slug': typeof authenticatedOrgSlugRouteRouteWithChildren
  '/accept-invitation/$id': typeof authAcceptInvitationIdRoute
  '/org/new': typeof authenticatedOrgNewRoute
  '/org/$slug/': typeof authenticatedOrgSlugIndexRoute
  '/org/$slug/dashboard': typeof authenticatedOrgSlugadminDashboardRouteRouteWithChildren
  '/org/$slug/communication': typeof authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteWithChildren
  '/org/$slug/manage/invitations': typeof authenticatedOrgSlugownerManageInvitationsRoute
  '/org/$slug/dashboard/': typeof authenticatedOrgSlugadminDashboardIndexRoute
  '/org/$slug/team': typeof authenticatedOrgSlugmemberTeamIndexRoute
  '/org/$slug/manage': typeof authenticatedOrgSlugownerManageIndexRoute
  '/org/$slug/communication/channels': typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteWithChildren
  '/org/$slug/dashboard/teams/new': typeof authenticatedOrgSlugadminDashboardTeamsNewRoute
  '/org/$slug/dashboard/members': typeof authenticatedOrgSlugadminDashboardMembersIndexRoute
  '/org/$slug/dashboard/teams': typeof authenticatedOrgSlugadminDashboardTeamsIndexRoute
  '/org/$slug/attendance': typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute
  '/org/$slug/communication/': typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute
  '/org/$slug/team/$id': typeof authenticatedOrgSlugmemberTeamIdIndexRoute
  '/org/$slug/manage/settings': typeof authenticatedOrgSlugownerManageSettingsIndexRoute
  '/org/$slug/communication/channels/$id': typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRoute
  '/org/$slug/team/$id/module': typeof authenticatedOrgSlugmemberTeamIdModuleIndexRoute
  '/org/$slug/team/$id/module/$slug': typeof authenticatedOrgSlugmemberTeamIdModuleSlugIndexRoute
  '/org/$slug/team/$id/module/$slug/feature': typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRoute
  '/org/$slug/team/$id/module/$slug/feature/$slug': typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof publicIndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/accept-invitation/$id': typeof authAcceptInvitationIdRoute
  '/org/new': typeof authenticatedOrgNewRoute
  '/org/$slug': typeof authenticatedOrgSlugIndexRoute
  '/org/$slug/manage/invitations': typeof authenticatedOrgSlugownerManageInvitationsRoute
  '/org/$slug/dashboard': typeof authenticatedOrgSlugadminDashboardIndexRoute
  '/org/$slug/team': typeof authenticatedOrgSlugmemberTeamIndexRoute
  '/org/$slug/manage': typeof authenticatedOrgSlugownerManageIndexRoute
  '/org/$slug/communication/channels': typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteWithChildren
  '/org/$slug/dashboard/teams/new': typeof authenticatedOrgSlugadminDashboardTeamsNewRoute
  '/org/$slug/dashboard/members': typeof authenticatedOrgSlugadminDashboardMembersIndexRoute
  '/org/$slug/dashboard/teams': typeof authenticatedOrgSlugadminDashboardTeamsIndexRoute
  '/org/$slug/attendance': typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute
  '/org/$slug/communication': typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute
  '/org/$slug/team/$id': typeof authenticatedOrgSlugmemberTeamIdIndexRoute
  '/org/$slug/manage/settings': typeof authenticatedOrgSlugownerManageSettingsIndexRoute
  '/org/$slug/communication/channels/$id': typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRoute
  '/org/$slug/team/$id/module': typeof authenticatedOrgSlugmemberTeamIdModuleIndexRoute
  '/org/$slug/team/$id/module/$slug': typeof authenticatedOrgSlugmemberTeamIdModuleSlugIndexRoute
  '/org/$slug/team/$id/module/$slug/feature': typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRoute
  '/org/$slug/team/$id/module/$slug/feature/$slug': typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(authenticated)': typeof authenticatedRouteRouteWithChildren
  '/(public)': typeof publicRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(public)/': typeof publicIndexRoute
  '/(authenticated)/org/$slug': typeof authenticatedOrgSlugRouteRouteWithChildren
  '/(auth)/accept-invitation/$id': typeof authAcceptInvitationIdRoute
  '/(authenticated)/org/new': typeof authenticatedOrgNewRoute
  '/(authenticated)/org/$slug/(member)': typeof authenticatedOrgSlugmemberRouteRouteWithChildren
  '/(authenticated)/org/$slug/(owner)': typeof authenticatedOrgSlugownerRouteRouteWithChildren
  '/(authenticated)/org/$slug/': typeof authenticatedOrgSlugIndexRoute
  '/(authenticated)/org/$slug/(admin)/dashboard': typeof authenticatedOrgSlugadminDashboardRouteRouteWithChildren
  '/(authenticated)/org/$slug/(member)/(base-modules)/communication': typeof authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteWithChildren
  '/(authenticated)/org/$slug/(owner)/manage/invitations': typeof authenticatedOrgSlugownerManageInvitationsRoute
  '/(authenticated)/org/$slug/(admin)/dashboard/': typeof authenticatedOrgSlugadminDashboardIndexRoute
  '/(authenticated)/org/$slug/(member)/team/': typeof authenticatedOrgSlugmemberTeamIndexRoute
  '/(authenticated)/org/$slug/(owner)/manage/': typeof authenticatedOrgSlugownerManageIndexRoute
  '/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels': typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteWithChildren
  '/(authenticated)/org/$slug/(admin)/dashboard/teams/new': typeof authenticatedOrgSlugadminDashboardTeamsNewRoute
  '/(authenticated)/org/$slug/(admin)/dashboard/members/': typeof authenticatedOrgSlugadminDashboardMembersIndexRoute
  '/(authenticated)/org/$slug/(admin)/dashboard/teams/': typeof authenticatedOrgSlugadminDashboardTeamsIndexRoute
  '/(authenticated)/org/$slug/(member)/(base-modules)/attendance/': typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute
  '/(authenticated)/org/$slug/(member)/(base-modules)/communication/': typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$id/': typeof authenticatedOrgSlugmemberTeamIdIndexRoute
  '/(authenticated)/org/$slug/(owner)/manage/settings/': typeof authenticatedOrgSlugownerManageSettingsIndexRoute
  '/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels/$id': typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRoute
  '/(authenticated)/org/$slug/(member)/team/$id/module/': typeof authenticatedOrgSlugmemberTeamIdModuleIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/': typeof authenticatedOrgSlugmemberTeamIdModuleSlugIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/': typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/$slug/': typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/org/$slug'
    | '/accept-invitation/$id'
    | '/org/new'
    | '/org/$slug/'
    | '/org/$slug/dashboard'
    | '/org/$slug/communication'
    | '/org/$slug/manage/invitations'
    | '/org/$slug/dashboard/'
    | '/org/$slug/team'
    | '/org/$slug/manage'
    | '/org/$slug/communication/channels'
    | '/org/$slug/dashboard/teams/new'
    | '/org/$slug/dashboard/members'
    | '/org/$slug/dashboard/teams'
    | '/org/$slug/attendance'
    | '/org/$slug/communication/'
    | '/org/$slug/team/$id'
    | '/org/$slug/manage/settings'
    | '/org/$slug/communication/channels/$id'
    | '/org/$slug/team/$id/module'
    | '/org/$slug/team/$id/module/$slug'
    | '/org/$slug/team/$id/module/$slug/feature'
    | '/org/$slug/team/$id/module/$slug/feature/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/accept-invitation/$id'
    | '/org/new'
    | '/org/$slug'
    | '/org/$slug/manage/invitations'
    | '/org/$slug/dashboard'
    | '/org/$slug/team'
    | '/org/$slug/manage'
    | '/org/$slug/communication/channels'
    | '/org/$slug/dashboard/teams/new'
    | '/org/$slug/dashboard/members'
    | '/org/$slug/dashboard/teams'
    | '/org/$slug/attendance'
    | '/org/$slug/communication'
    | '/org/$slug/team/$id'
    | '/org/$slug/manage/settings'
    | '/org/$slug/communication/channels/$id'
    | '/org/$slug/team/$id/module'
    | '/org/$slug/team/$id/module/$slug'
    | '/org/$slug/team/$id/module/$slug/feature'
    | '/org/$slug/team/$id/module/$slug/feature/$slug'
  id:
    | '__root__'
    | '/(authenticated)'
    | '/(public)'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/(public)/'
    | '/(authenticated)/org/$slug'
    | '/(auth)/accept-invitation/$id'
    | '/(authenticated)/org/new'
    | '/(authenticated)/org/$slug/(member)'
    | '/(authenticated)/org/$slug/(owner)'
    | '/(authenticated)/org/$slug/'
    | '/(authenticated)/org/$slug/(admin)/dashboard'
    | '/(authenticated)/org/$slug/(member)/(base-modules)/communication'
    | '/(authenticated)/org/$slug/(owner)/manage/invitations'
    | '/(authenticated)/org/$slug/(admin)/dashboard/'
    | '/(authenticated)/org/$slug/(member)/team/'
    | '/(authenticated)/org/$slug/(owner)/manage/'
    | '/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels'
    | '/(authenticated)/org/$slug/(admin)/dashboard/teams/new'
    | '/(authenticated)/org/$slug/(admin)/dashboard/members/'
    | '/(authenticated)/org/$slug/(admin)/dashboard/teams/'
    | '/(authenticated)/org/$slug/(member)/(base-modules)/attendance/'
    | '/(authenticated)/org/$slug/(member)/(base-modules)/communication/'
    | '/(authenticated)/org/$slug/(member)/team/$id/'
    | '/(authenticated)/org/$slug/(owner)/manage/settings/'
    | '/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels/$id'
    | '/(authenticated)/org/$slug/(member)/team/$id/module/'
    | '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/'
    | '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/'
    | '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/$slug/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authenticatedRouteRoute: typeof authenticatedRouteRouteWithChildren
  publicRouteRoute: typeof publicRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
  authAcceptInvitationIdRoute: typeof authAcceptInvitationIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(public)': {
      id: '/(public)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)': {
      id: '/(authenticated)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/org/new': {
      id: '/(authenticated)/org/new'
      path: '/org/new'
      fullPath: '/org/new'
      preLoaderRoute: typeof authenticatedOrgNewRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(auth)/accept-invitation/$id': {
      id: '/(auth)/accept-invitation/$id'
      path: '/accept-invitation/$id'
      fullPath: '/accept-invitation/$id'
      preLoaderRoute: typeof authAcceptInvitationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/org/$slug': {
      id: '/(authenticated)/org/$slug'
      path: '/org/$slug'
      fullPath: '/org/$slug'
      preLoaderRoute: typeof authenticatedOrgSlugRouteRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/': {
      id: '/(authenticated)/org/$slug/'
      path: '/'
      fullPath: '/org/$slug/'
      preLoaderRoute: typeof authenticatedOrgSlugIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugRouteRoute
    }
    '/(authenticated)/org/$slug/(owner)': {
      id: '/(authenticated)/org/$slug/(owner)'
      path: '/'
      fullPath: '/org/$slug/'
      preLoaderRoute: typeof authenticatedOrgSlugownerRouteRouteImport
      parentRoute: typeof authenticatedOrgSlugRouteRoute
    }
    '/(authenticated)/org/$slug/(member)': {
      id: '/(authenticated)/org/$slug/(member)'
      path: '/'
      fullPath: '/org/$slug/'
      preLoaderRoute: typeof authenticatedOrgSlugmemberRouteRouteImport
      parentRoute: typeof authenticatedOrgSlugRouteRoute
    }
    '/(authenticated)/org/$slug/(admin)/dashboard': {
      id: '/(authenticated)/org/$slug/(admin)/dashboard'
      path: '/dashboard'
      fullPath: '/org/$slug/dashboard'
      preLoaderRoute: typeof authenticatedOrgSlugadminDashboardRouteRouteImport
      parentRoute: typeof authenticatedOrgSlugRouteRoute
    }
    '/(authenticated)/org/$slug/(owner)/manage/': {
      id: '/(authenticated)/org/$slug/(owner)/manage/'
      path: '/manage'
      fullPath: '/org/$slug/manage'
      preLoaderRoute: typeof authenticatedOrgSlugownerManageIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugownerRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/': {
      id: '/(authenticated)/org/$slug/(member)/team/'
      path: '/team'
      fullPath: '/org/$slug/team'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberRouteRoute
    }
    '/(authenticated)/org/$slug/(admin)/dashboard/': {
      id: '/(authenticated)/org/$slug/(admin)/dashboard/'
      path: '/'
      fullPath: '/org/$slug/dashboard/'
      preLoaderRoute: typeof authenticatedOrgSlugadminDashboardIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugadminDashboardRouteRoute
    }
    '/(authenticated)/org/$slug/(owner)/manage/invitations': {
      id: '/(authenticated)/org/$slug/(owner)/manage/invitations'
      path: '/manage/invitations'
      fullPath: '/org/$slug/manage/invitations'
      preLoaderRoute: typeof authenticatedOrgSlugownerManageInvitationsRouteImport
      parentRoute: typeof authenticatedOrgSlugownerRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/(base-modules)/communication': {
      id: '/(authenticated)/org/$slug/(member)/(base-modules)/communication'
      path: '/communication'
      fullPath: '/org/$slug/communication'
      preLoaderRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberRouteRoute
    }
    '/(authenticated)/org/$slug/(owner)/manage/settings/': {
      id: '/(authenticated)/org/$slug/(owner)/manage/settings/'
      path: '/manage/settings'
      fullPath: '/org/$slug/manage/settings'
      preLoaderRoute: typeof authenticatedOrgSlugownerManageSettingsIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugownerRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$id/': {
      id: '/(authenticated)/org/$slug/(member)/team/$id/'
      path: '/team/$id'
      fullPath: '/org/$slug/team/$id'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamIdIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/(base-modules)/communication/': {
      id: '/(authenticated)/org/$slug/(member)/(base-modules)/communication/'
      path: '/'
      fullPath: '/org/$slug/communication/'
      preLoaderRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/(base-modules)/attendance/': {
      id: '/(authenticated)/org/$slug/(member)/(base-modules)/attendance/'
      path: '/attendance'
      fullPath: '/org/$slug/attendance'
      preLoaderRoute: typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberRouteRoute
    }
    '/(authenticated)/org/$slug/(admin)/dashboard/teams/': {
      id: '/(authenticated)/org/$slug/(admin)/dashboard/teams/'
      path: '/teams'
      fullPath: '/org/$slug/dashboard/teams'
      preLoaderRoute: typeof authenticatedOrgSlugadminDashboardTeamsIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugadminDashboardRouteRoute
    }
    '/(authenticated)/org/$slug/(admin)/dashboard/members/': {
      id: '/(authenticated)/org/$slug/(admin)/dashboard/members/'
      path: '/members'
      fullPath: '/org/$slug/dashboard/members'
      preLoaderRoute: typeof authenticatedOrgSlugadminDashboardMembersIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugadminDashboardRouteRoute
    }
    '/(authenticated)/org/$slug/(admin)/dashboard/teams/new': {
      id: '/(authenticated)/org/$slug/(admin)/dashboard/teams/new'
      path: '/teams/new'
      fullPath: '/org/$slug/dashboard/teams/new'
      preLoaderRoute: typeof authenticatedOrgSlugadminDashboardTeamsNewRouteImport
      parentRoute: typeof authenticatedOrgSlugadminDashboardRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels': {
      id: '/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels'
      path: '/channels'
      fullPath: '/org/$slug/communication/channels'
      preLoaderRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$id/module/': {
      id: '/(authenticated)/org/$slug/(member)/team/$id/module/'
      path: '/team/$id/module'
      fullPath: '/org/$slug/team/$id/module'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamIdModuleIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels/$id': {
      id: '/(authenticated)/org/$slug/(member)/(base-modules)/communication/channels/$id'
      path: '/$id'
      fullPath: '/org/$slug/communication/channels/$id'
      preLoaderRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/': {
      id: '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/'
      path: '/team/$id/module/$slug'
      fullPath: '/org/$slug/team/$id/module/$slug'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamIdModuleSlugIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/': {
      id: '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/'
      path: '/team/$id/module/$slug/feature'
      fullPath: '/org/$slug/team/$id/module/$slug/feature'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/$slug/': {
      id: '/(authenticated)/org/$slug/(member)/team/$id/module/$slug/feature/$slug/'
      path: '/team/$id/module/$slug/feature/$slug'
      fullPath: '/org/$slug/team/$id/module/$slug/feature/$slug'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRouteImport
      parentRoute: typeof authenticatedOrgSlugmemberRouteRoute
    }
  }
}

interface authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteChildren {
  authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRoute
}

const authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteChildren: authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteChildren =
  {
    authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRoute:
      authenticatedOrgSlugmemberbaseModulesCommunicationChannelsIdRoute,
  }

const authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteWithChildren =
  authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRoute._addFileChildren(
    authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteChildren,
  )

interface authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteChildren {
  authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteWithChildren
  authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute
}

const authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteChildren: authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteChildren =
  {
    authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRoute:
      authenticatedOrgSlugmemberbaseModulesCommunicationChannelsRouteRouteWithChildren,
    authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute:
      authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute,
  }

const authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteWithChildren =
  authenticatedOrgSlugmemberbaseModulesCommunicationRouteRoute._addFileChildren(
    authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteChildren,
  )

interface authenticatedOrgSlugmemberRouteRouteChildren {
  authenticatedOrgSlugmemberbaseModulesCommunicationRouteRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteWithChildren
  authenticatedOrgSlugmemberTeamIndexRoute: typeof authenticatedOrgSlugmemberTeamIndexRoute
  authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute: typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute
  authenticatedOrgSlugmemberTeamIdIndexRoute: typeof authenticatedOrgSlugmemberTeamIdIndexRoute
  authenticatedOrgSlugmemberTeamIdModuleIndexRoute: typeof authenticatedOrgSlugmemberTeamIdModuleIndexRoute
  authenticatedOrgSlugmemberTeamIdModuleSlugIndexRoute: typeof authenticatedOrgSlugmemberTeamIdModuleSlugIndexRoute
  authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRoute: typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRoute
  authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRoute: typeof authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRoute
}

const authenticatedOrgSlugmemberRouteRouteChildren: authenticatedOrgSlugmemberRouteRouteChildren =
  {
    authenticatedOrgSlugmemberbaseModulesCommunicationRouteRoute:
      authenticatedOrgSlugmemberbaseModulesCommunicationRouteRouteWithChildren,
    authenticatedOrgSlugmemberTeamIndexRoute:
      authenticatedOrgSlugmemberTeamIndexRoute,
    authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute:
      authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute,
    authenticatedOrgSlugmemberTeamIdIndexRoute:
      authenticatedOrgSlugmemberTeamIdIndexRoute,
    authenticatedOrgSlugmemberTeamIdModuleIndexRoute:
      authenticatedOrgSlugmemberTeamIdModuleIndexRoute,
    authenticatedOrgSlugmemberTeamIdModuleSlugIndexRoute:
      authenticatedOrgSlugmemberTeamIdModuleSlugIndexRoute,
    authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRoute:
      authenticatedOrgSlugmemberTeamIdModuleSlugFeatureIndexRoute,
    authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRoute:
      authenticatedOrgSlugmemberTeamIdModuleSlugFeatureSlugIndexRoute,
  }

const authenticatedOrgSlugmemberRouteRouteWithChildren =
  authenticatedOrgSlugmemberRouteRoute._addFileChildren(
    authenticatedOrgSlugmemberRouteRouteChildren,
  )

interface authenticatedOrgSlugownerRouteRouteChildren {
  authenticatedOrgSlugownerManageInvitationsRoute: typeof authenticatedOrgSlugownerManageInvitationsRoute
  authenticatedOrgSlugownerManageIndexRoute: typeof authenticatedOrgSlugownerManageIndexRoute
  authenticatedOrgSlugownerManageSettingsIndexRoute: typeof authenticatedOrgSlugownerManageSettingsIndexRoute
}

const authenticatedOrgSlugownerRouteRouteChildren: authenticatedOrgSlugownerRouteRouteChildren =
  {
    authenticatedOrgSlugownerManageInvitationsRoute:
      authenticatedOrgSlugownerManageInvitationsRoute,
    authenticatedOrgSlugownerManageIndexRoute:
      authenticatedOrgSlugownerManageIndexRoute,
    authenticatedOrgSlugownerManageSettingsIndexRoute:
      authenticatedOrgSlugownerManageSettingsIndexRoute,
  }

const authenticatedOrgSlugownerRouteRouteWithChildren =
  authenticatedOrgSlugownerRouteRoute._addFileChildren(
    authenticatedOrgSlugownerRouteRouteChildren,
  )

interface authenticatedOrgSlugadminDashboardRouteRouteChildren {
  authenticatedOrgSlugadminDashboardIndexRoute: typeof authenticatedOrgSlugadminDashboardIndexRoute
  authenticatedOrgSlugadminDashboardTeamsNewRoute: typeof authenticatedOrgSlugadminDashboardTeamsNewRoute
  authenticatedOrgSlugadminDashboardMembersIndexRoute: typeof authenticatedOrgSlugadminDashboardMembersIndexRoute
  authenticatedOrgSlugadminDashboardTeamsIndexRoute: typeof authenticatedOrgSlugadminDashboardTeamsIndexRoute
}

const authenticatedOrgSlugadminDashboardRouteRouteChildren: authenticatedOrgSlugadminDashboardRouteRouteChildren =
  {
    authenticatedOrgSlugadminDashboardIndexRoute:
      authenticatedOrgSlugadminDashboardIndexRoute,
    authenticatedOrgSlugadminDashboardTeamsNewRoute:
      authenticatedOrgSlugadminDashboardTeamsNewRoute,
    authenticatedOrgSlugadminDashboardMembersIndexRoute:
      authenticatedOrgSlugadminDashboardMembersIndexRoute,
    authenticatedOrgSlugadminDashboardTeamsIndexRoute:
      authenticatedOrgSlugadminDashboardTeamsIndexRoute,
  }

const authenticatedOrgSlugadminDashboardRouteRouteWithChildren =
  authenticatedOrgSlugadminDashboardRouteRoute._addFileChildren(
    authenticatedOrgSlugadminDashboardRouteRouteChildren,
  )

interface authenticatedOrgSlugRouteRouteChildren {
  authenticatedOrgSlugmemberRouteRoute: typeof authenticatedOrgSlugmemberRouteRouteWithChildren
  authenticatedOrgSlugownerRouteRoute: typeof authenticatedOrgSlugownerRouteRouteWithChildren
  authenticatedOrgSlugIndexRoute: typeof authenticatedOrgSlugIndexRoute
  authenticatedOrgSlugadminDashboardRouteRoute: typeof authenticatedOrgSlugadminDashboardRouteRouteWithChildren
}

const authenticatedOrgSlugRouteRouteChildren: authenticatedOrgSlugRouteRouteChildren =
  {
    authenticatedOrgSlugmemberRouteRoute:
      authenticatedOrgSlugmemberRouteRouteWithChildren,
    authenticatedOrgSlugownerRouteRoute:
      authenticatedOrgSlugownerRouteRouteWithChildren,
    authenticatedOrgSlugIndexRoute: authenticatedOrgSlugIndexRoute,
    authenticatedOrgSlugadminDashboardRouteRoute:
      authenticatedOrgSlugadminDashboardRouteRouteWithChildren,
  }

const authenticatedOrgSlugRouteRouteWithChildren =
  authenticatedOrgSlugRouteRoute._addFileChildren(
    authenticatedOrgSlugRouteRouteChildren,
  )

interface authenticatedRouteRouteChildren {
  authenticatedOrgSlugRouteRoute: typeof authenticatedOrgSlugRouteRouteWithChildren
  authenticatedOrgNewRoute: typeof authenticatedOrgNewRoute
}

const authenticatedRouteRouteChildren: authenticatedRouteRouteChildren = {
  authenticatedOrgSlugRouteRoute: authenticatedOrgSlugRouteRouteWithChildren,
  authenticatedOrgNewRoute: authenticatedOrgNewRoute,
}

const authenticatedRouteRouteWithChildren =
  authenticatedRouteRoute._addFileChildren(authenticatedRouteRouteChildren)

interface publicRouteRouteChildren {
  publicIndexRoute: typeof publicIndexRoute
}

const publicRouteRouteChildren: publicRouteRouteChildren = {
  publicIndexRoute: publicIndexRoute,
}

const publicRouteRouteWithChildren = publicRouteRoute._addFileChildren(
  publicRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  authenticatedRouteRoute: authenticatedRouteRouteWithChildren,
  publicRouteRoute: publicRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
  authAcceptInvitationIdRoute: authAcceptInvitationIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as publicRouteRouteImport } from './routes/(public)/route'
import { Route as authenticatedRouteRouteImport } from './routes/(authenticated)/route'
import { Route as publicIndexRouteImport } from './routes/(public)/index'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authenticatedOrgNewRouteImport } from './routes/(authenticated)/org/new'
import { Route as authenticatedOrgSlugIndexRouteImport } from './routes/(authenticated)/org/$slug/index'
import { Route as authenticatedOrgSlugownerSettingsIndexRouteImport } from './routes/(authenticated)/org/$slug/(owner)/settings/index'
import { Route as authenticatedOrgSlugmemberTeamIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/index'
import { Route as authenticatedOrgSlugadminDashboardIndexRouteImport } from './routes/(authenticated)/org/$slug/(admin)/dashboard/index'
import { Route as authenticatedOrgSlugmemberTeamSlugIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$slug/index'
import { Route as authenticatedOrgSlugmemberbaseModulesCommunicationIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/(base-modules)/communication/index'
import { Route as authenticatedOrgSlugmemberbaseModulesAttendanceIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/(base-modules)/attendance/index'
import { Route as authenticatedOrgSlugmemberTeamSlugModuleIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$slug/module/index'
import { Route as authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/index'
import { Route as authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/index'
import { Route as authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRouteImport } from './routes/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/$slug/index'

const publicRouteRoute = publicRouteRouteImport.update({
  id: '/(public)',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedRouteRoute = authenticatedRouteRouteImport.update({
  id: '/(authenticated)',
  getParentRoute: () => rootRouteImport,
} as any)
const publicIndexRoute = publicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicRouteRoute,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedOrgNewRoute = authenticatedOrgNewRouteImport.update({
  id: '/org/new',
  path: '/org/new',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedOrgSlugIndexRoute =
  authenticatedOrgSlugIndexRouteImport.update({
    id: '/org/$slug/',
    path: '/org/$slug/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugownerSettingsIndexRoute =
  authenticatedOrgSlugownerSettingsIndexRouteImport.update({
    id: '/org/$slug/(owner)/settings/',
    path: '/org/$slug/settings/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamIndexRoute =
  authenticatedOrgSlugmemberTeamIndexRouteImport.update({
    id: '/org/$slug/(member)/team/',
    path: '/org/$slug/team/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugadminDashboardIndexRoute =
  authenticatedOrgSlugadminDashboardIndexRouteImport.update({
    id: '/org/$slug/(admin)/dashboard/',
    path: '/org/$slug/dashboard/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamSlugIndexRoute =
  authenticatedOrgSlugmemberTeamSlugIndexRouteImport.update({
    id: '/org/$slug/(member)/team/$slug/',
    path: '/org/$slug/team/$slug/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute =
  authenticatedOrgSlugmemberbaseModulesCommunicationIndexRouteImport.update({
    id: '/org/$slug/(member)/(base-modules)/communication/',
    path: '/org/$slug/communication/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute =
  authenticatedOrgSlugmemberbaseModulesAttendanceIndexRouteImport.update({
    id: '/org/$slug/(member)/(base-modules)/attendance/',
    path: '/org/$slug/attendance/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamSlugModuleIndexRoute =
  authenticatedOrgSlugmemberTeamSlugModuleIndexRouteImport.update({
    id: '/org/$slug/(member)/team/$slug/module/',
    path: '/org/$slug/team/$slug/module/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRoute =
  authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRouteImport.update({
    id: '/org/$slug/(member)/team/$slug/module/$slug/',
    path: '/org/$slug/team/$slug/module/$slug/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRoute =
  authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRouteImport.update({
    id: '/org/$slug/(member)/team/$slug/module/$slug/feature/',
    path: '/org/$slug/team/$slug/module/$slug/feature/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRoute =
  authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRouteImport.update(
    {
      id: '/org/$slug/(member)/team/$slug/module/$slug/feature/$slug/',
      path: '/org/$slug/team/$slug/module/$slug/feature/$slug/',
      getParentRoute: () => authenticatedRouteRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/': typeof publicIndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/org/new': typeof authenticatedOrgNewRoute
  '/org/$slug': typeof authenticatedOrgSlugIndexRoute
  '/org/$slug/dashboard': typeof authenticatedOrgSlugadminDashboardIndexRoute
  '/org/$slug/team': typeof authenticatedOrgSlugmemberTeamIndexRoute
  '/org/$slug/settings': typeof authenticatedOrgSlugownerSettingsIndexRoute
  '/org/$slug/attendance': typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute
  '/org/$slug/communication': typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute
  '/org/$slug/team/$slug': typeof authenticatedOrgSlugmemberTeamSlugIndexRoute
  '/org/$slug/team/$slug/module': typeof authenticatedOrgSlugmemberTeamSlugModuleIndexRoute
  '/org/$slug/team/$slug/module/$slug': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRoute
  '/org/$slug/team/$slug/module/$slug/feature': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRoute
  '/org/$slug/team/$slug/module/$slug/feature/$slug': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof publicIndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/org/new': typeof authenticatedOrgNewRoute
  '/org/$slug': typeof authenticatedOrgSlugIndexRoute
  '/org/$slug/dashboard': typeof authenticatedOrgSlugadminDashboardIndexRoute
  '/org/$slug/team': typeof authenticatedOrgSlugmemberTeamIndexRoute
  '/org/$slug/settings': typeof authenticatedOrgSlugownerSettingsIndexRoute
  '/org/$slug/attendance': typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute
  '/org/$slug/communication': typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute
  '/org/$slug/team/$slug': typeof authenticatedOrgSlugmemberTeamSlugIndexRoute
  '/org/$slug/team/$slug/module': typeof authenticatedOrgSlugmemberTeamSlugModuleIndexRoute
  '/org/$slug/team/$slug/module/$slug': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRoute
  '/org/$slug/team/$slug/module/$slug/feature': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRoute
  '/org/$slug/team/$slug/module/$slug/feature/$slug': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(authenticated)': typeof authenticatedRouteRouteWithChildren
  '/(public)': typeof publicRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(public)/': typeof publicIndexRoute
  '/(authenticated)/org/new': typeof authenticatedOrgNewRoute
  '/(authenticated)/org/$slug/': typeof authenticatedOrgSlugIndexRoute
  '/(authenticated)/org/$slug/(admin)/dashboard/': typeof authenticatedOrgSlugadminDashboardIndexRoute
  '/(authenticated)/org/$slug/(member)/team/': typeof authenticatedOrgSlugmemberTeamIndexRoute
  '/(authenticated)/org/$slug/(owner)/settings/': typeof authenticatedOrgSlugownerSettingsIndexRoute
  '/(authenticated)/org/$slug/(member)/(base-modules)/attendance/': typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute
  '/(authenticated)/org/$slug/(member)/(base-modules)/communication/': typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$slug/': typeof authenticatedOrgSlugmemberTeamSlugIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$slug/module/': typeof authenticatedOrgSlugmemberTeamSlugModuleIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRoute
  '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/$slug/': typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/org/new'
    | '/org/$slug'
    | '/org/$slug/dashboard'
    | '/org/$slug/team'
    | '/org/$slug/settings'
    | '/org/$slug/attendance'
    | '/org/$slug/communication'
    | '/org/$slug/team/$slug'
    | '/org/$slug/team/$slug/module'
    | '/org/$slug/team/$slug/module/$slug'
    | '/org/$slug/team/$slug/module/$slug/feature'
    | '/org/$slug/team/$slug/module/$slug/feature/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/org/new'
    | '/org/$slug'
    | '/org/$slug/dashboard'
    | '/org/$slug/team'
    | '/org/$slug/settings'
    | '/org/$slug/attendance'
    | '/org/$slug/communication'
    | '/org/$slug/team/$slug'
    | '/org/$slug/team/$slug/module'
    | '/org/$slug/team/$slug/module/$slug'
    | '/org/$slug/team/$slug/module/$slug/feature'
    | '/org/$slug/team/$slug/module/$slug/feature/$slug'
  id:
    | '__root__'
    | '/(authenticated)'
    | '/(public)'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/(public)/'
    | '/(authenticated)/org/new'
    | '/(authenticated)/org/$slug/'
    | '/(authenticated)/org/$slug/(admin)/dashboard/'
    | '/(authenticated)/org/$slug/(member)/team/'
    | '/(authenticated)/org/$slug/(owner)/settings/'
    | '/(authenticated)/org/$slug/(member)/(base-modules)/attendance/'
    | '/(authenticated)/org/$slug/(member)/(base-modules)/communication/'
    | '/(authenticated)/org/$slug/(member)/team/$slug/'
    | '/(authenticated)/org/$slug/(member)/team/$slug/module/'
    | '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/'
    | '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/'
    | '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/$slug/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authenticatedRouteRoute: typeof authenticatedRouteRouteWithChildren
  publicRouteRoute: typeof publicRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(public)': {
      id: '/(public)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)': {
      id: '/(authenticated)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)/org/new': {
      id: '/(authenticated)/org/new'
      path: '/org/new'
      fullPath: '/org/new'
      preLoaderRoute: typeof authenticatedOrgNewRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/': {
      id: '/(authenticated)/org/$slug/'
      path: '/org/$slug'
      fullPath: '/org/$slug'
      preLoaderRoute: typeof authenticatedOrgSlugIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(owner)/settings/': {
      id: '/(authenticated)/org/$slug/(owner)/settings/'
      path: '/org/$slug/settings'
      fullPath: '/org/$slug/settings'
      preLoaderRoute: typeof authenticatedOrgSlugownerSettingsIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/': {
      id: '/(authenticated)/org/$slug/(member)/team/'
      path: '/org/$slug/team'
      fullPath: '/org/$slug/team'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(admin)/dashboard/': {
      id: '/(authenticated)/org/$slug/(admin)/dashboard/'
      path: '/org/$slug/dashboard'
      fullPath: '/org/$slug/dashboard'
      preLoaderRoute: typeof authenticatedOrgSlugadminDashboardIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$slug/': {
      id: '/(authenticated)/org/$slug/(member)/team/$slug/'
      path: '/org/$slug/team/$slug'
      fullPath: '/org/$slug/team/$slug'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamSlugIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/(base-modules)/communication/': {
      id: '/(authenticated)/org/$slug/(member)/(base-modules)/communication/'
      path: '/org/$slug/communication'
      fullPath: '/org/$slug/communication'
      preLoaderRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/(base-modules)/attendance/': {
      id: '/(authenticated)/org/$slug/(member)/(base-modules)/attendance/'
      path: '/org/$slug/attendance'
      fullPath: '/org/$slug/attendance'
      preLoaderRoute: typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$slug/module/': {
      id: '/(authenticated)/org/$slug/(member)/team/$slug/module/'
      path: '/org/$slug/team/$slug/module'
      fullPath: '/org/$slug/team/$slug/module'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamSlugModuleIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/': {
      id: '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/'
      path: '/org/$slug/team/$slug/module/$slug'
      fullPath: '/org/$slug/team/$slug/module/$slug'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/': {
      id: '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/'
      path: '/org/$slug/team/$slug/module/$slug/feature'
      fullPath: '/org/$slug/team/$slug/module/$slug/feature'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/$slug/': {
      id: '/(authenticated)/org/$slug/(member)/team/$slug/module/$slug/feature/$slug/'
      path: '/org/$slug/team/$slug/module/$slug/feature/$slug'
      fullPath: '/org/$slug/team/$slug/module/$slug/feature/$slug'
      preLoaderRoute: typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
  }
}

interface authenticatedRouteRouteChildren {
  authenticatedOrgNewRoute: typeof authenticatedOrgNewRoute
  authenticatedOrgSlugIndexRoute: typeof authenticatedOrgSlugIndexRoute
  authenticatedOrgSlugadminDashboardIndexRoute: typeof authenticatedOrgSlugadminDashboardIndexRoute
  authenticatedOrgSlugmemberTeamIndexRoute: typeof authenticatedOrgSlugmemberTeamIndexRoute
  authenticatedOrgSlugownerSettingsIndexRoute: typeof authenticatedOrgSlugownerSettingsIndexRoute
  authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute: typeof authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute
  authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute: typeof authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute
  authenticatedOrgSlugmemberTeamSlugIndexRoute: typeof authenticatedOrgSlugmemberTeamSlugIndexRoute
  authenticatedOrgSlugmemberTeamSlugModuleIndexRoute: typeof authenticatedOrgSlugmemberTeamSlugModuleIndexRoute
  authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRoute: typeof authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRoute
  authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRoute: typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRoute
  authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRoute: typeof authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRoute
}

const authenticatedRouteRouteChildren: authenticatedRouteRouteChildren = {
  authenticatedOrgNewRoute: authenticatedOrgNewRoute,
  authenticatedOrgSlugIndexRoute: authenticatedOrgSlugIndexRoute,
  authenticatedOrgSlugadminDashboardIndexRoute:
    authenticatedOrgSlugadminDashboardIndexRoute,
  authenticatedOrgSlugmemberTeamIndexRoute:
    authenticatedOrgSlugmemberTeamIndexRoute,
  authenticatedOrgSlugownerSettingsIndexRoute:
    authenticatedOrgSlugownerSettingsIndexRoute,
  authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute:
    authenticatedOrgSlugmemberbaseModulesAttendanceIndexRoute,
  authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute:
    authenticatedOrgSlugmemberbaseModulesCommunicationIndexRoute,
  authenticatedOrgSlugmemberTeamSlugIndexRoute:
    authenticatedOrgSlugmemberTeamSlugIndexRoute,
  authenticatedOrgSlugmemberTeamSlugModuleIndexRoute:
    authenticatedOrgSlugmemberTeamSlugModuleIndexRoute,
  authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRoute:
    authenticatedOrgSlugmemberTeamSlugModuleSlugIndexRoute,
  authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRoute:
    authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureIndexRoute,
  authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRoute:
    authenticatedOrgSlugmemberTeamSlugModuleSlugFeatureSlugIndexRoute,
}

const authenticatedRouteRouteWithChildren =
  authenticatedRouteRoute._addFileChildren(authenticatedRouteRouteChildren)

interface publicRouteRouteChildren {
  publicIndexRoute: typeof publicIndexRoute
}

const publicRouteRouteChildren: publicRouteRouteChildren = {
  publicIndexRoute: publicIndexRoute,
}

const publicRouteRouteWithChildren = publicRouteRoute._addFileChildren(
  publicRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  authenticatedRouteRoute: authenticatedRouteRouteWithChildren,
  publicRouteRoute: publicRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
